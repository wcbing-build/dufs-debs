name: build and release

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 1 * * *'

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
    - name: Check update
      env:
        UPSTREAM_REPO: "sigoden/dufs" # upstream repo
        LOCAL_REPO: "${{ github.repository }}"
      run: |
        get_github_latest_version() {
            curl -sw "%{redirect_url}" "https://github.com/$1/releases/latest" |
                sed -n 's|.*/releases/tag/[^0-9]*\([^_]*\).*|\1|p'
        }
        # get local version
        LOCAL_VERSION=$(get_github_latest_version "$LOCAL_REPO")
        if [ -z "$LOCAL_VERSION" ]; then
            LOCAL_VERSION="0"
        fi
        # get upstream version
        UPSTREAM_VERSION=$(get_github_latest_version "$UPSTREAM_REPO")
        # compare versions
        if [ -z "$UPSTREAM_VERSION" ]; then
            echo "Error: Can't get version from $UPSTREAM_REPO."
            echo "VERSION=0" >> $GITHUB_ENV
        elif [ "$LOCAL_VERSION" = "$UPSTREAM_VERSION" ]; then
            echo "No update. The version is ($UPSTREAM_VERSION)."
            echo "VERSION=0" >> $GITHUB_ENV
        else
            echo "Update to $UPSTREAM_VERSION from $LOCAL_VERSION."
            echo "VERSION=$UPSTREAM_VERSION" >> $GITHUB_ENV
        fi

    - name: Checkout
      if: ${{ env.VERSION != '0' }}
      uses: actions/checkout@v4

    - name: Build
      if: ${{ env.VERSION != '0' }}
      run: ./build.sh $VERSION

    - name: Release
      uses: softprops/action-gh-release@v2
      if: ${{ env.VERSION != '0' }}
      with:
        tag_name: v${{ env.VERSION }}
        files: output/*
